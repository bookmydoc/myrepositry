
dojo.declare("WWAccordion", null, {
	constructor: function(args) {
	 this.interval = 1000;
	 this.mode = 'onclick';
   this.classPattern = /off-nav-[0-9]+/;
	 dojo.mixin(this,args);
	 this.enabled = true;
	 this.init();
	},
	
	init: function(){
	  this.opened = -1;
    this.dts = dojo.query('dt.parent.level'+this.level, this.node);
	  this.dds = dojo.query('dd.parent.level'+this.level, this.node);
    this.dts.forEach(function(el, i){
      el.i = i;
      if(dojo.hasClass(this.dds[i], 'opened')){
        this.opened = i;
      }
      
      if(!dojo.hasClass(el, 'forceopened')){
        dojo.connect(el, this.mode, dojo.hitch(this,'onOpenOrClose'));
      }
      
      this.dds[i].dl = dojo.query('> dl', this.dds[i])[0];
      
      new WWAccordion({
        node : this.dds[i].dl,
        level : this.level+1,
        mode: this.mode,
        interval : this.interval, 
        easing : this.easing,
        instance: this.instance,
        classPattern: this.classPattern,
        accordionmode: this.accordionmode
      });
    }, this);
  },
  
  onOpenOrClose: function(e){
    var el = e.currentTarget;
    if(this.mode == "onmouseenter" && dojo.hasClass(el, 'opened')) return;
    
    var h = dojo.style(this.dds[el.i], 'height');
    if(h == 0){
      if(this.accordionmode && this.opened >= 0 && this.opened != el.i){
        if(this.dds[this.opened].wwanim && this.dds[this.opened].wwanim.status() == "playing"){
          this.dds[this.opened].wwanim.stop();
        }
        dojo.animateProperty({
          node: this.node, 
          properties: {
            marginTop: 0
          }, 
          duration: this.interval, 
          easing: this.easing
        }).play();
      
        this.dds[this.opened].wwanim = dojo.animateProperty({
          node: this.dds[this.opened], 
          properties: {height: 0, opacity: 0}, 
          duration: this.interval, 
          onEnd: dojo.hitch(this,'onCloseEnd'),
          easing: this.easing
        }).play();
        this.onCloseStart(this.dds[this.opened]);
        dojo.removeClass(this.dts[this.opened],'opened');
        dojo.cookie(this.instance+'-'+this.getNavClass(this.dts[this.opened]), 1, {expires: -1});
      }
      dojo.style(this.dds[el.i], 'display', 'block');
      if(this.dds[el.i].wwanim && this.dds[el.i].wwanim.status() == "playing"){
        this.dds[el.i].wwanim.stop();
      }
      var pos = dojo.position(this.node).y-dojo.position(el).y;
      if(this.dds[this.opened]){
        pos += dojo.position(this.dds[this.opened]).h;
      }

      dojo.animateProperty({
        node: this.node, 
        properties: {
          marginTop: pos
        }, 
        duration: this.interval, 
        easing: this.easing
      }).play();
      
      this.dds[el.i].wwanim = dojo.animateProperty({
        node: this.dds[el.i], 
        properties: {
          height: parseInt(dojo.style(this.dds[el.i].dl, 'height'))+parseInt(dojo.style(this.dds[el.i].dl, 'marginTop')), opacity: 1
        }, 
        duration: this.interval, 
        onEnd: dojo.hitch(this,'onOpenEnd'),
        easing: this.easing
      }).play();
      dojo.addClass(this.dts[el.i],'opened');
      dojo.cookie(this.instance+'-'+this.getNavClass(this.dts[el.i]), 1, {expires: 1});
      this.opened = el.i;
    }else{
      if(this.dds[el.i].wwanim && this.dds[el.i].wwanim.status() == "playing"){
        this.dds[el.i].wwanim.stop();
      }

      dojo.animateProperty({
        node: this.node, 
        properties: {
          marginTop: 0
        }, 
        duration: this.interval, 
        easing: this.easing
      }).play();
      
      this.dds[el.i].wwanim = dojo.animateProperty({
        node: this.dds[el.i], 
        properties: {height: 0, opacity: 0}, 
        duration: this.interval, 
        onEnd: dojo.hitch(this,'onCloseEnd'),
        easing: this.easing
      }).play();
      this.onCloseStart(this.dds[el.i]);
      dojo.removeClass(this.dts[el.i],'opened');
      dojo.cookie(this.instance+'-'+this.getNavClass(this.dts[el.i]), 1, {expires: -1});
    }
  },
  
  onOpenEnd: function(el){
    dojo.style(el.dl, 'position', 'relative');
    dojo.style(el, 'height', '100%');
  },
  
  onCloseEnd: function(el){
    dojo.style(el, 'display', 'none');
    dojo.style(el.dl, 'position', 'absolute');
  },
  
  onCloseStart: function(el){
    dojo.style(el.dl, 'position', 'absolute');
  },
  
  getNavClass: function(el){
    return this.classPattern.exec(dojo.attr(el, 'class'))[0];
  }
  
});